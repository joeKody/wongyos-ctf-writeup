import java.awt.*;import java.awt.event.*;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;import javax.swing.*;public class BMICalculator { private JFrame frame; private JTextField weight; private JTextField height; private JButton calculate; private JButton clear; private JLabel result; public BMICalculator(String title) {  frame = new JFrame(title);  frame.setSize(800, 200);  frame.setLayout(new GridLayout(4, 1));  frame.setResizable(false);  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  weight = new JTextField();  height = new JTextField();  calculate = new JButton("Calculate");  clear = new JButton("Clear");  result = new JLabel("", JLabel.CENTER);  JPanel panelWeight = new JPanel();  panelWeight.setLayout(new GridLayout(1, 2));  panelWeight.add(new Label("Enter Your Weight (kg.)"));  panelWeight.add(weight);  frame.add(panelWeight);  JPanel panelHeight = new JPanel();  panelHeight.setLayout(new GridLayout(1, 2));  panelHeight.add(new Label("Enter Your Height (cm.)"));  panelHeight.add(height);  frame.add(panelHeight);  JPanel panelControl = new JPanel();  panelControl.setLayout(new GridLayout(1, 2));  panelControl.add(calculate);  panelControl.add(clear);  frame.add(panelControl);  frame.add(result);  handleMyEvent();  frame.setVisible(true); } public void handleMyEvent() {  calculate.addActionListener(new ActionListener() {   public void actionPerformed(ActionEvent evt) {    double w = Double.parseDouble(weight.getText());    double h = Double.parseDouble(height.getText());    double bmi = w / ((h / 100.0) * (h / 100.0));    if (getMd5(w + "").equals("ed7c9df61492b6dcf3d87359505212bc") &&      getMd5(h + 19 + "").equals("bf26df212c5c6e2bbb76fa1fede018a5")) {     result.setText("flag{" + getMd5(h + "covid" + w) + "}");    } else {     if (bmi >= 40) {      result.setText("Very Obese");     } else if (bmi >= 30) {      result.setText("Obese");     } else if (bmi >= 25) {      result.setText("Overweight");     } else if (bmi >= 18.5) {      result.setText("Normal (Healthy Weight)");     } else if (bmi >= 15) {      result.setText("Underweight");     } else {      result.setText("Very Underweight");     }    }   }  });  clear.addActionListener(new ActionListener() {   public void actionPerformed(ActionEvent evt) {    weight.setText("");    height.setText("");    result.setText("");   }  }); } private String getData(double a, double b) {  String s = a + " " + b;  String t = "";  for (int i = 0; i < s.length(); i++) {   t = t + (int) s.charAt(i) + (char) ((int) s.charAt(i) + 'A');  }  return t.toUpperCase(); }  public static String getMd5(String s) {  try {   MessageDigest md = MessageDigest.getInstance("MD5");   byte[] array = md.digest(s.getBytes());   StringBuffer sb = new StringBuffer();   for (int i = 0; i < array.length; i++) {    sb.append(Integer.toHexString((array[i] & 0xFF) | 0x100).substring(1, 3));   }   return sb.toString();  } catch (NoSuchAlgorithmException e) {   return "";  } } public static void main(String[] args) {  new BMICalculator("BMI Calculator"); }}